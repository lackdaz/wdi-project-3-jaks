
<h1 class="order-title">Invoices#show</h1>
<p>Find me in app/views/transactions/index.html.erb</p>
<div id="right-panel">
    <div id="inputs">
        <h1 class="order-details-wrap">
          Coming from = <%= @start %>
          Delivering to = <%= @destination %>
        </h1>
    </div>
    <div>
        <strong>Results</strong>
    </div>
    <div id="output">
    </div>
</div>
<div id="map">
</div>
<script>
    function initMap() {
        var bounds = new google.maps.LatLngBounds;
        var markersArray = [];
        var origin1 = {
            lat: gon.lat,
            lng: gon.long
        };
        window.markersArray = [];
        // where the restaurant is
        var start = gon.start

        // Where the shop destination is
        var destinationA = gon.destination;
        window.mappymap = new google.maps.Map(document.getElementById('map'), {
            center: {
                lat: 1.3521,
                lng: 103.8198
            },
            zoom: 10
        });
        var geocoder = new google.maps.Geocoder;
        var service = new google.maps.DistanceMatrixService;
        service.getDistanceMatrix({

            origins: [origin1],
            origins: [start],
            destinations: [destinationA],
            travelMode: 'DRIVING',
            unitSystem: google.maps.UnitSystem.METRIC,
            avoidHighways: false,
            avoidTolls: false
        }, function (response, status) {
            if (status !== 'OK') {
                alert('Error was: ' + status);
            } else {
                var directionsDisplay = new google.maps.DirectionsRenderer;
                var directionsService = new google.maps.DirectionsService()
                var originList = response.originAddresses;
                var destinationList = response.destinationAddresses;
                var outputDiv = document.getElementById('output');
                outputDiv.innerHTML = '';

                var showGeocodedAddressOnMap = function (asDestination) {
                    return function (results, statcus) {
                        if (status === 'OK') {
                            mappymap.fitBounds(bounds.extend(results[0].geometry.location));
                            directionsDisplay.setMap(mappymap)
                            directionsService.route({

                                origin: origin1,

                                origin: start,

                                destination: destinationA,
                                travelMode: 'DRIVING'
                            }, function (result, status) {
                                if (status == 'OK') {
                                    directionsDisplay.setDirections(result);
                                    console.log('direction service')
                                } else {
                                    alert('Geocode was not successful due to: ' + status);
                                }
                            });
                        } else {
                            alert('Geocode was not successful due to: ' + status);
                        }
                    };
                };
                for (var i = 0; i < originList.length; i++) {
                    var results = response.rows[i].elements;
                    geocoder.geocode({
                        'address': originList[i]
                    }, showGeocodedAddressOnMap(false));
                    for (var j = 0; j < results.length; j++) {
                        geocoder.geocode({
                            'address': destinationList[j]
                        }, showGeocodedAddressOnMap(false));
                        outputDiv.innerHTML += originList[i] + ' to ' + destinationList[j] + ': ' + results[j].distance.text + ' in ' + results[j].duration.text + '<br>';
                    }
                }
            }
        });
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAb2ofRZ6CYSwvlrBc0do9tCkR9U89VxCM&libraries=geometry&callback=initMap"></script>
