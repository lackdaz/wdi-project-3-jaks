<h1>Transactions#index</h1>
<p>Find me in app/views/transactions/index.html.erb</p>


<div id="right-panel">
    <div id="inputs">
        <pre>
var origin1 =
var destinationA =
        </pre>
    </div>
    <div>
        <strong>Results</strong>
    </div>
    <div id="output">
    </div>
</div>
<div id="map">
</div>

<script>

    function initMap() {

        var bounds = new google.maps.LatLngBounds;
        var origin1 = {
            lat: gon.lat,
            lng: gon.long
        };
        var destinationA = 'Chinatown, Singapore';



        var geocoder = new google.maps.Geocoder;

        var service = new google.maps.DistanceMatrixService;

        service.getDistanceMatrix({
            origins: [origin1],
            destinations: [destinationA],
            travelMode: 'DRIVING',
            unitSystem: google.maps.UnitSystem.METRIC,
            avoidHighways: false,
            avoidTolls: false
        }, function (response, status) {
            if (status !== 'OK') {
                alert('Error was: ' + status);
            } else {
                var directionsDisplay = new google.maps.DirectionsRenderer;
                var directionsService = new google.maps.DirectionsService()
                var originList = response.originAddresses;
                var destinationList = response.destinationAddresses;
                var outputDiv = document.getElementById('output');
                outputDiv.innerHTML = '';

                var showGeocodedAddressOnMap = function (asDestination) {
                    return function (results, statcus) {
                        if (status === 'OK') {
                            directionsService.route({
                                origin: origin1,
                                destination: destinationA,
                                travelMode: 'DRIVING'
                            }, function (result, status) {
                                if (status == 'OK') {
                                    directionsDisplay.setDirections(result);
                                } else {
                                    alert('Geocode was not successful due to: ' + status);
                                }
                            });

                        } else {
                            alert('Geocode was not successful due to: ' + status);
                        }
                    };
                };

                for (var i = 0; i < originList.length; i++) {

                    var results = response.rows[i].elements;

                    geocoder.geocode({
                        'address': originList[i]
                    }, showGeocodedAddressOnMap(false));

                    for (var j = 0; j < results.length; j++) {
                        geocoder.geocode({
                            'address': destinationList[j]
                        }, showGeocodedAddressOnMap(false));

                        outputDiv.innerHTML = results[j].duration.text;
                    }
                }
            }
        });
    }


</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAb2ofRZ6CYSwvlrBc0do9tCkR9U89VxCM&libraries=geometry&callback=initMap"></script>
