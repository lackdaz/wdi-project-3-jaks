<h1>Transactions#index</h1>
<p>Find me in app/views/transactions/index.html.erb</p>

<div id="right-panel">
      <div id="inputs">
        <pre>
var origin1 =
var destinationA =

        </pre>
      </div>
      <div>
        <strong>Results</strong>
      </div>
      <div id="output"></div>
    </div>
    <div id="map"></div>
    <script>








    function initMap() {
      var distance = google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng({lat: 1.3521, lng: 103.8198}), new google.maps.LatLng({lat: 1.30838, lng: 103.83264})) / 1000

      console.log(distance, 'geocoder km distance')
if (distance <6){
  console.log('yes')
}








      var bounds = new google.maps.LatLngBounds;
      // var markersArray = [];
      var origin1 = {lat: 1.3521, lng: 103.8198};
      var destinationA = '8 Claymore Hill, Singapore';
      //
      // var destinationIcon = 'https://chart.googleapis.com/chart?' +
      //     'chst=d_map_pin_letter&chld=D|FF0000|000000';
      // var originIcon = 'https://chart.googleapis.com/chart?' +
      //     'chst=d_map_pin_letter&chld=O|FFFF00|000000';
      var map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 1.3521, lng: 103.8198},
        zoom: 10
      });

      var geocoder = new google.maps.Geocoder;

      var service = new google.maps.DistanceMatrixService;

      service.getDistanceMatrix({
        origins: [origin1],
        destinations: [destinationA],
        travelMode: 'DRIVING',
        unitSystem: google.maps.UnitSystem.METRIC,
        avoidHighways: false,
        avoidTolls: false
      }, function(response, status) {
        if (status !== 'OK') {
          alert('Error was: ' + status);
          }
        else {
          var directionsDisplay = new google.maps.DirectionsRenderer;
          var directionsService = new google.maps.DirectionsService()
          var originList = response.originAddresses;
          var destinationList = response.destinationAddresses;
          var outputDiv = document.getElementById('output');
          outputDiv.innerHTML = '';
          // deleteMarkers(markersArray);

          var showGeocodedAddressOnMap = function(asDestination) {
            // var icon = asDestination ? destinationIcon : originIcon;
            return function(results, status) {
              if (status === 'OK') {
                map.fitBounds(bounds.extend(results[0].geometry.location));
                // markersArray.push(new google.maps.Marker({
                //   map: map,
                //   position: results[0].geometry.location,
                //   icon: icon
                // })
              // );


                directionsDisplay.setMap(map)
                directionsService.route({origin: origin1, destination: destinationA, travelMode: 'DRIVING'}, function(result, status) {
                  if (status == 'OK') {
                    directionsDisplay.setDirections(result);
                    console.log('direction service')
              } else {
                alert('Geocode was not successful due to: ' + status);
              }
            });









              } else {
                alert('Geocode was not successful due to: ' + status);
              }
            };
          };

          for (var i = 0; i < originList.length; i++) {
            var results = response.rows[i].elements;
            geocoder.geocode({'address': originList[i]},
                showGeocodedAddressOnMap(false));
            for (var j = 0; j < results.length; j++) {
              geocoder.geocode({'address': destinationList[j]},
                  showGeocodedAddressOnMap(false));
              outputDiv.innerHTML += originList[i] + ' to ' + destinationList[j] +
                  ': ' + results[j].distance.text + ' in ' +
                  results[j].duration.text + '<br>';
            }
          }
        }
      });
    }


    // function deleteMarkers(markersArray) {
    //   for (var i = 0; i < markersArray.length; i++) {
    //     markersArray[i].setMap(null);
    //   }
    //   markersArray = [];
    // }








</script>
